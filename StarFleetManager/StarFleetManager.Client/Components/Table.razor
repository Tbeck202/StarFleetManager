@using System.Reflection
@using System.ComponentModel.DataAnnotations

<div class="table-responsive">
    <table class="table table-sm">
        <thead>
            <tr>
                <th scope="col">
                    <button class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#editModal">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-database-add" viewBox="0 0 16 16">
                            <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7m.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0" />
                            <path d="M12.096 6.223A5 5 0 0 0 13 5.698V7c0 .289-.213.654-.753 1.007a4.5 4.5 0 0 1 1.753.25V4c0-1.007-.875-1.755-1.904-2.223C11.022 1.289 9.573 1 8 1s-3.022.289-4.096.777C2.875 2.245 2 2.993 2 4v9c0 1.007.875 1.755 1.904 2.223C4.978 15.71 6.427 16 8 16c.536 0 1.058-.034 1.555-.097a4.5 4.5 0 0 1-.813-.927Q8.378 15 8 15c-1.464 0-2.766-.27-3.682-.687C3.356 13.875 3 13.373 3 13v-1.302c.271.202.58.378.904.525C4.978 12.71 6.427 13 8 13h.027a4.6 4.6 0 0 1 0-1H8c-1.464 0-2.766-.27-3.682-.687C3.356 10.875 3 10.373 3 10V8.698c.271.202.58.378.904.525C4.978 9.71 6.427 10 8 10q.393 0 .774-.024a4.5 4.5 0 0 1 1.102-1.132C9.298 8.944 8.666 9 8 9c-1.464 0-2.766-.27-3.682-.687C3.356 7.875 3 7.373 3 7V5.698c.271.202.58.378.904.525C4.978 6.711 6.427 7 8 7s3.022-.289 4.096-.777M3 4c0-.374.356-.875 1.318-1.313C5.234 2.271 6.536 2 8 2s2.766.27 3.682.687C12.644 3.125 13 3.627 13 4c0 .374-.356.875-1.318 1.313C10.766 5.729 9.464 6 8 6s-2.766-.27-3.682-.687C3.356 4.875 3 4.373 3 4" />
                        </svg>
                    </button>
                </th>
                @foreach (var prop in typeof(StarShipView)
                                .GetProperties()
                                .OrderBy(prop => prop
                                    .GetCustomAttribute<DisplayAttribute>()?.Order ?? int.MaxValue)
                                    .Where(p => p
                                        .GetCustomAttribute<DisplayAttribute>()?.Order <= 10))
                {
                    var display = prop.GetCustomAttribute<DisplayAttribute>();
                    <th>@(display?.Name ?? prop.Name)</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var ship in StarShips)
            {
                <tr>
                    <td>
                        <button class="btn btn-outline-secondary btn-sm" @onclick="() => ToggleAdditionalDetails(ship)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-slash-minus" viewBox="0 0 16 16">
                                <path d="m1.854 14.854 13-13a.5.5 0 0 0-.708-.708l-13 13a.5.5 0 0 0 .708.708M4 1a.5.5 0 0 1 .5.5v2h2a.5.5 0 0 1 0 1h-2v2a.5.5 0 0 1-1 0v-2h-2a.5.5 0 0 1 0-1h2v-2A.5.5 0 0 1 4 1m5 11a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5A.5.5 0 0 1 9 12" />
                            </svg>
                        </button>
                    </td>
                    @foreach (var prop in typeof(StarShipView)
                        .GetProperties()
                        .OrderBy(p => p
                            .GetCustomAttribute<DisplayAttribute>()?.Order ?? int.MaxValue)
                            .Where(p => p
                                .GetCustomAttribute<DisplayAttribute>()?.Order <= 10))
                    {
                        var value = prop.GetValue(ship);
                        if(value is IList<string> list)
                        {
                            <td>
                                <select>
                                    @foreach(var item in list)
                                    {
                                        <option>@item</option>
                                    }
                                </select>
                            </td>
                        }
                        else
                        {
                            <td>@value</td>
                        }
                    }
                </tr>
                if (ship.DisplayAdditionalDetails)
                {
                    <tr class="table-secondary" style="display:@(ship.DisplayAdditionalDetails ? "table-row" : "none")">
                        <td colspan="10">
                            <table class="table table-sm mb-0">
                                <thead>
                                    <tr>
                                        @foreach (var prop in typeof(StarShipView)
                                                                        .GetProperties()
                                                                        .OrderBy(p => p
                                                                        .GetCustomAttribute<DisplayAttribute>()?.Order ?? int.MaxValue)
                                                                        .Where(p => p
                                                                        .GetCustomAttribute<DisplayAttribute>()?.Order > 10))
                                        {
                                            var display = prop.GetCustomAttribute<DisplayAttribute>();
                                            <th>@(display?.Name ?? prop.Name)</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        @foreach (var prop in typeof(StarShipView)
                                                                        .GetProperties()
                                                                        .OrderBy(p => p
                                                                        .GetCustomAttribute<DisplayAttribute>()?.Order ?? int.MaxValue)
                                                                        .Where(p => p
                                                                        .GetCustomAttribute<DisplayAttribute>()?.Order > 10))
                                        {
                                            var value = prop.GetValue(ship);
                                            if (value is IList<string> list)
                                            {
                                                if (list.Count == 0)
                                                {
                                                    <td> - </td>
                                                }
                                                else
                                                {
                                                    <td>
                                                        <div class="dropdown">
                                                            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                                View Items
                                                            </button>
                                                            <ul class="dropdown-menu">
                                                                @foreach (var item in list)
                                                                {
                                                                    <li class="p-1">@item</li>
                                                                }
                                                            </ul>
                                                        </div>
                                                    </td>
                                                }
                                            }
                                            else if (value is DateTime dateTime)
                                            {
                                                <td>@dateTime.ToShortDateString()</td>
                                            }
                                            else
                                            {
                                                <td>@value</td>
                                            }
                                        }
                                    </tr>
                                </tbody>
                            </table>
                        </td>
                        <td>
                            <div class="col">
                                <div class="row">
                                    <button class="btn btn-sm btn-warning w-50 m-1" data-bs-toggle="modal" data-bs-target="#editModal" @onclick="() => EditShip(ship)">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                                        </svg>
                                        Edit
                                    </button>
                                </div>
                                <div class="row">
                                    <button class="btn btn-sm btn-danger w-50 m-1" @onclick="() => ToggleDelete(ship)">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                            <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                                        </svg>
                                        Delete
                                    </button>
                                </div>
                            </div>
                        </td>
                    </tr>
                    @if (ship.DisplayDeleteButton)
                    {
                        <tr class="table-secondary" style="display:@(ship.DisplayDeleteButton ? "table-row" : "none")">
                            <td colspan="11">
                                <table class="table table-sm mb-0">

                                </table>
                                <div class="row text-center justify-content-center">
                                    <span class="text-danger">Are you sure you want to delete your @ship.Name?</span>
                                    <button class="btn btn-sm btn-outline-danger w-25 mx-1">Delete</button>
                                    <button class="btn btn-sm btn-outline-info w-25 mx-1" @onclick="() => ToggleDelete(ship)">Cancel</button>
                                </div>
                            </td>
                        </tr>
                    }
                }
                
            }
        </tbody>


    </table>
</div>

@code {
    [Parameter]
    public List<StarShipView> StarShips { get; set; }

    [Parameter]
    public EventCallback<StarShipView> EditShipCallBack { get; set; }

    private void ToggleAdditionalDetails(StarShipView ship)
    {
        ship.DisplayAdditionalDetails = !ship.DisplayAdditionalDetails;
    }

    private void ToggleDelete(StarShipView ship)
    {
        ship.DisplayDeleteButton = !ship.DisplayDeleteButton;
    }

    private void EditShip(StarShipView ship)
    {
        EditShipCallBack.InvokeAsync(ship);
    }
}
